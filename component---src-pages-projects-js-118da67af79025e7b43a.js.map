{"version":3,"sources":["webpack:///./src/components/projectItem.js","webpack:///./src/pages/projects.js","webpack:///./.cache/gatsby-browser-entry.js","webpack:///./.cache/public-page-renderer.js","webpack:///./src/components/layout.js","webpack:///./.cache/public-page-renderer-prod.js"],"names":["chooseImageLink","props","project_link","github_link","projectItem","react_default","a","createElement","className","styles","wholeDamnThing","projectTitle","title","description","img_url","imageLink","href","target","image","src","alt","alt_text","ifImage","dangerouslySetInnerHTML","__html","details","details_noImage","ifNoImageDescription","techUsed","items","inString","thisArray","split","descriptionItemsArray","forEach","item","push","listItem","getDescription","languages","projectLink","hasLiveSite","Projects","_ref","chidlren","gatsby_browser_entry","query","render","data","Fragment","style","listStyle","paddingLeft","projectItemsArray","allProjectsJson","edges","key","node","custom_link","getProjects","_2183998790","__webpack_exports__","layout","textAlign","projects_Projects","__webpack_require__","d","StaticQuery","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","gatsby_link__WEBPACK_IMPORTED_MODULE_1__","gatsby_link__WEBPACK_IMPORTED_MODULE_1___default","loader","enqueue","StaticQueryContext","React","createContext","StaticQueryDataRenderer","staticQueryData","finalData","children","Consumer","m","module","exports","require","default","gatsby__WEBPACK_IMPORTED_MODULE_1__","_styles_mainLayout_module_css__WEBPACK_IMPORTED_MODULE_2__","_styles_mainLayout_module_css__WEBPACK_IMPORTED_MODULE_2___default","ListLink","navLink","to","textDecoration","Header","id","lineHeight","paddingTop","siteHeaderAlexKlavens","display","color","class","onClick","myFunction","Footer","footer","footerList","iconLink","designedDeveloped","x","document","getElementById","margin","maxWidth","padding","ProdPageRenderer","location","pageResources","InternalPageRenderer","Object","assign","json"],"mappings":"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","file":"component---src-pages-projects-js-118da67af79025e7b43a.js","sourcesContent":["import React from \"react\"\nimport { StaticQuery, graphql } from 'gatsby'\nimport styles from \"../styles/projectItem.module.css\"\n\n\nfunction getDescription(inString){\n  if (inString) {\n    const thisArray = inString.split(\"##\");\n    const descriptionItemsArray = [];\n\n    thisArray.forEach (\n      item =>\n        descriptionItemsArray.push(\n          <li className={styles.listItem}>{item}</li>\n        )\n    )\n\n    return descriptionItemsArray;\n  } else {\n    return \"\"\n  }\n\n}\n\nfunction hasLiveSite(props){\n  if (props.project_link) {\n    return (\n      <p>See <a className={styles.projectLink} href={props.project_link} target=\"__blank\">{props.title}</a> live, or check it out on <a target=\"__blank\" className={styles.projectLink}href={props.github_link}> Github </a>.</p>\n    );\n  } else {\n    return (\n      <p>Learn more about {props.title} on <a className={styles.projectLink} href={props.github_link} target=\"__blank\"> GitHub</a>.</p>\n\n    )\n  }\n}\n\nfunction ifNoImageDescription(props){\n  if (props.img_url){\n    return (<div dangerouslySetInnerHTML={{__html: props.details}} className={styles.details}></div>)\n  } else {\n    return (<div dangerouslySetInnerHTML={{__html: props.details}} className={styles.details_noImage}></div>)\n  }\n}\n\nfunction ifImage(props){\n  if (props.img_url) {\n    return (\n      <a className={styles.imageLink} href={chooseImageLink(props)} target=\"_blank\">\n        <img className={styles.image} src={props.img_url} alt={props.alt_text} />\n      </a>\n    )\n  } else {\n    return null;\n  }\n}\n\nfunction chooseImageLink(props){\n  if (props.project_link) {\n    return props.project_link\n  } else {\n    return props.github_link\n  }\n}\n\n\nexport default props => (\n  <div className={styles.wholeDamnThing}>\n    <h2 className={styles.projectTitle}>{props.title}</h2>\n    <p className={styles.description}>{props.description}</p>\n    {ifImage(props)}\n\n    {ifNoImageDescription(props)}\n\n\n\n    {/* <div dangerouslySetInnerHTML={{__html: props.details}} className={styles.details}></div> */}\n\n\n    <div className={styles.techUsed}>\n      {/* <p className={styles.techUsedTitle}>Tech used: </p> */}\n      <ul className={styles.items}>{getDescription(props.languages)}</ul>\n    </div>\n    <p>{hasLiveSite(props)}</p>\n\n    {/* <p>See <a className={styles.projectLink} href={props.project_link} target=\"__blank\">{props.title}</a> live, or check it out <a target=\"__blank\" className={styles.projectLink}href={props.github_link}> on Github. </a></p> */}\n\n\n\n  </div>\n)\n\n//\n// export const query = graphql`\n//   query {\n//     file(relativePath: {eq: \"tamag.jpg\"}) {\n//       childImageSharp {\n//         fixed(width: 400) {\n//           ...GatsbyImageSharpFixed\n//         }\n//       }\n//     }\n//   }\n// `\n","import React from \"react\"\nimport Layout from \"../components/layout\"\nimport ProjectItem from \"../components/projectItem\"\nimport { StaticQuery, graphql } from 'gatsby'\n\n//\n// const MainList = ({ children }) => (\n//   <StaticQuery\n//     query={graphql`\n//       query ProjectsQuery {\n//         allProjectsJson {\n//           edges {\n//             node {\n//               title\n//               description\n//               details\n//               project_link\n//             }\n//           }\n//         }\n//       }\n//     `}\n//     render={data => (\n//       <>\n//         <ul style={{\n//           listStyle: `none`,\n//           paddingLeft: `0px`\n//         }}>{getProjects(data)}</ul>\n//       </>\n//     )}\n//   />\n// );\n//\n//\n// function getProjects(data) {\n//   const projectItemsArray = [];\n//   data.allProjectsJson.edges.forEach(\n//     item =>\n//       projectItemsArray.push(\n//         <li key={item.node.title}>\n//           <ProjectItem\n//             title = {item.node.title}\n//             description = {item.node.description}\n//             details = {item.node.details}\n//             project_link={item.node.project_link}\n//           />\n//         </li>\n//       )\n//   );\n//   return projectItemsArray;\n// }\n\n// import thisImage from \"/images/tamag.jpg\"\n\n\nfunction getProjects(data) {\n  const projectItemsArray = [];\n  data.allProjectsJson.edges.forEach(\n    item =>\n      projectItemsArray.push(\n        <li key={item.node.title}>\n          <ProjectItem\n            title={item.node.title}\n            description={item.node.description}\n            details={item.node.details}\n            img_url={item.node.img_url}\n            alt_text={item.node.alt_text}\n            project_link={item.node.project_link}\n            github_link={item.node.github_link}\n            custom_link={item.node.custom_link}\n            languages={item.node.languages}\n          />\n        </li>\n      )\n  );\n  return projectItemsArray\n}\n\nconst Projects = ({ chidlren }) => (\n  <StaticQuery\n    query={graphql`\n      query ProjectsQuery {\n        allProjectsJson {\n          edges {\n            node {\n              title\n              description\n              details\n              img_url\n              alt_text\n              project_link\n              github_link\n              custom_link\n              languages\n            }\n          }\n        }\n      }\n    `}\n    render={data => (\n      <>\n        <ul style={{\n          listStyle: `none`,\n          paddingLeft: `0px`\n        }}>{getProjects(data)}</ul>\n      </>\n    )}\n  />\n);\n\n\nexport default ( ) => (\n  <Layout>\n    <h1 style={{\n      textAlign:`center`\n    }}>Projects</h1>\n\n    <Projects />\n\n    {/* <ProjectItem\n      title = \"TripAdvisor Magazine\"\n      description = \"A Natural Language Processing-informed magazine of the highest-quality travel reviews\"\n      details = \"For TripAdvisor's summer intern hackathon, I took TripAdvisor Magazine from concept to product. TripAdvisor Magazine is a web-based magazine-style publication that identifies high quality travel reviews with natural language processing and features them as articles. There are millions of reviews on TripAdvisor, often containing a few sentences of praise or frustration. But among those millions, there are some beautiful, compelling, and lengthy travel essays!\"\n      img_url = \"/images/tamag.jpg\"\n      alt_text = \"A storefront featured in TripAdvisor Magazine\"\n      project_link = \"https://tripadvisor-magazine.herokuapp.com\"\n      github_link = \"https://github.com/alexklavens/tripadvisor-magazine\"\n      languages = \"Python##\n                    Flask##\n                    Contentful API##\n                    Heroku##\n                    Pandas##\n                    HTML/CSS##\n                    Jinja##\n                    NLP##\n                    CMS##\n                    Design\"\n\n    />\n\n\n\n    <ProjectItem\n      title = \"Hospital Closure Map\"\n      description = \"A web-scraping effort and data visualization focusing on rural hospital closures\"\n      details = \"This is a data analysis, and visualization project focused on rural hospital closures in the United States. During my internship at WBUR, I reported on the MA Attorney General’s decision to not prosecute the former leaders of a western Massachusetts hospital that closed in 2014 with less than a week’s notice to employees. The experience inspired me to learn more about rural hospital closures. This project was also my first foray into web-based data visualizations using D3.js.\"\n      img_url = \"/images/hospital_preview.png\"\n      alt_text = \"Screenshot of the map in this project.\"\n      project_link = \"https://alexklavens.github.io/hospital-closure-map/\"\n      github_link = \"https://github.com/alexklavens/hospital-closure-map\"\n      languages=\"D3.js##\n                  GeoJSON##\n                  HTML/CSS##\n                  Python##\n                  RegEx\"\n    />\n\n    <a name=\"this\"></a>\n    <ProjectItem\n      title = \"Presidential Speech Scraper & NLP\"\n      description = \"A computer science project focusing on web scraping and natural language processing of presidential documents.\"\n      details=\"A web scraper for the American Presidency Project, a massive online repository of presidential documents that has no programmatic accessibility. I created this for the purpose of accessing documents for a natural language processing research project.\"\n      img_url = \"/images/presidency.png\"\n      alt_text = \"Screen shot of the home page of the American Presidency Project's website.\"\n      github_link = \"https://github.com/alexklavens/presidential-speech-scraper\"\n      languages = \"Python##\n                    BeautifulSoup##\n                    JSON\"\n    />\n\n     <ProjectItem\n\n      title = \"Google Sheets + Slack Schedule Checker\"\n      img_url = \"/images/slack_google.png\"\n      alt_text = \"Slack and Google Sheets Logo. Source: BetterCloud.\"\n      details=\"For the Computer Science teaching assistant program at Connecticut College, I integrated Slack into our work flow and built a Slack bot that employees could ask for schedules.\"\n      languages=\"Python##\n                Slack API##\n                Google Sheets API##\n                Heroku\"\n    />\n\n    <ProjectItem\n\n      title = \"Skunkpocalypse\"\n      img_url = \"https://skunkpocalypse.weebly.com/uploads/4/4/0/3/44033907/capture_1_orig.png\"\n      details=\"For a video game development course, my partner and I built Skunkpocalypse, a game built with Unity for a massive touchscreen in our school’s library. In Skunkpocalypse, Connecticut College has been overrun by Skunks (this is an actual problem at Conn). The user plays as Gustavo Ryan, a student who is charged with defeating these skunks, and eventually a boss skunk, by collecting and spraying perfume.\"\n      github_link = \"https://github.com/alexklavens/skunkpocalypse\"\n\n      languages=\"C# ##\n                Unity\n                \"\n    />\n\n    <ProjectItem\n      title = \"Original Dutch Folk Music\"\n      details = \"This was a final project for my Digital Sound Processing course. A MATLAB program analyzes a database of monophonic Dutch folk melodies to create intelligent original melodies. The main goal of the program is to create a interval-based (instead of pitch-based)symbolic representation of the music, and to generate original music based on likely interval changes heard in the database of music.\"\n      languages=\"MATLAB\"\n      github_link = \"https://github.com/alexklavens/smart-melody-generator\"\n    /> */}\n\n  </Layout>\n)\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Link, {\n  withPrefix,\n  withAssetPrefix,\n  navigate,\n  push,\n  replace,\n  navigateTo,\n  parsePath,\n} from \"gatsby-link\"\nimport PageRenderer from \"./public-page-renderer\"\nimport loader from \"./loader\"\n\nconst prefetchPathname = loader.enqueue\n\nconst StaticQueryContext = React.createContext({})\n\nfunction StaticQueryDataRenderer({ staticQueryData, data, query, render }) {\n  const finalData = data\n    ? data.data\n    : staticQueryData[query] && staticQueryData[query].data\n\n  return (\n    <React.Fragment>\n      {finalData && render(finalData)}\n      {!finalData && <div>Loading (StaticQuery)</div>}\n    </React.Fragment>\n  )\n}\n\nconst StaticQuery = props => {\n  const { data, query, render, children } = props\n\n  return (\n    <StaticQueryContext.Consumer>\n      {staticQueryData => (\n        <StaticQueryDataRenderer\n          data={data}\n          query={query}\n          render={render || children}\n          staticQueryData={staticQueryData}\n        />\n      )}\n    </StaticQueryContext.Consumer>\n  )\n}\n\nconst useStaticQuery = query => {\n  if (\n    typeof React.useContext !== `function` &&\n    process.env.NODE_ENV === `development`\n  ) {\n    throw new Error(\n      `You're likely using a version of React that doesn't support Hooks\\n` +\n        `Please update React and ReactDOM to 16.8.0 or later to use the useStaticQuery hook.`\n    )\n  }\n  const context = React.useContext(StaticQueryContext)\n  if (context[query] && context[query].data) {\n    return context[query].data\n  } else {\n    throw new Error(\n      `The result of this StaticQuery could not be fetched.\\n\\n` +\n        `This is likely a bug in Gatsby and if refreshing the page does not fix it, ` +\n        `please open an issue in https://github.com/gatsbyjs/gatsby/issues`\n    )\n  }\n}\n\nStaticQuery.propTypes = {\n  data: PropTypes.object,\n  query: PropTypes.string.isRequired,\n  render: PropTypes.func,\n  children: PropTypes.func,\n}\n\nfunction graphql() {\n  throw new Error(\n    `It appears like Gatsby is misconfigured. Gatsby related \\`graphql\\` calls ` +\n      `are supposed to only be evaluated at compile time, and then compiled away. ` +\n      `Unfortunately, something went wrong and the query was left in the compiled code.\\n\\n` +\n      `Unless your site has a complex or custom babel/Gatsby configuration this is likely a bug in Gatsby.`\n  )\n}\n\nexport {\n  Link,\n  withAssetPrefix,\n  withPrefix,\n  graphql,\n  parsePath,\n  navigate,\n  push, // TODO replace for v3\n  replace, // TODO remove replace for v3\n  navigateTo, // TODO: remove navigateTo for v3\n  StaticQueryContext,\n  StaticQuery,\n  PageRenderer,\n  useStaticQuery,\n  prefetchPathname,\n}\n","const preferDefault = m => (m && m.default) || m\n\nif (process.env.BUILD_STAGE === `develop`) {\n  module.exports = preferDefault(require(`./public-page-renderer-dev`))\n} else if (process.env.BUILD_STAGE === `build-javascript`) {\n  module.exports = preferDefault(require(`./public-page-renderer-prod`))\n} else {\n  module.exports = () => null\n}\n","import React from \"react\"\nimport { Link } from \"gatsby\"\nimport styles from \"../styles/mainLayout.module.css\"\n\n\nconst ListLink = props => (\n  <li className={styles.navLink}>\n    <Link to={props.to}\n      style={{\n        // color: `rgb(128,128,128)`,\n        textDecoration: `none`,\n      }}>{props.children}</Link>\n  </li>\n)\n\nconst Header = props => (\n  <div id=\"siteHeader\" style={{\n    // height: `40px`,\n    lineHeight: `40px`,\n    paddingTop: `10px`,\n    // borderBottom: `1px solid black`\n    }}>\n    <Link to=\"/\">\n      <h1 className={styles.siteHeaderAlexKlavens}\n        style={{\n        display: `inline-block`,\n        color: `black`\n      }}\n      >\n\n      Alex Klavens </h1>\n\n    </Link>\n    <ul id=\"myLinks\">\n\n\n\n      <ListLink to=\"/projects/\">Projects</ListLink>\n      <ListLink to=\"/journalism/\">Journalism</ListLink>\n      <ListLink to=\"/resume/\">Resume</ListLink>\n      <ListLink to=\"/contact/\">Contact</ListLink>\n\n    </ul>\n\n\n    <div id=\"burger\">\n      <a href=\"javascript:void(0);\" id=\"showMenu\" class=\"icon\" onClick={myFunction}>\n        <div class=\"burger\"></div>\n        <div class=\"burger\"></div>\n        <div class=\"burger\"></div>\n      </a>\n    </div>\n\n  </div>\n)\n\nconst Footer = props => (\n  <div className={styles.footer}>\n   {/* <p className={styles.linesplit}>____________________</p> */}\n    <ul className={styles.footerList}>\n      <li><a href=\"https://github.com/alexklavens\" target=\"_blank\"><img className={styles.iconLink} src=\"/icons/github.png\"/></a></li>\n      <li><a href=\"https://twitter.com/alexklavens\" target=\"_blank\"><img className={styles.iconLink} src=\"/icons/twitter.png\"/></a></li>\n      <li><a href=\"https://linkedin.com/in/alexklavens\" target=\"_blank\"><img className={styles.iconLink} src=\"/icons/linkedin.png\"/></a></li>\n      <li><a href=\"mailto:aklavens@gmail.com\" target=\"_blank\"><img className={styles.iconLink} src=\"/icons/email.png\"/></a></li>\n\n    </ul>\n    <p className={styles.designedDeveloped}>Designed and developed by Alex Klavens</p>\n\n  </div>\n)\n\n\nfunction myFunction() {\n  var x = document.getElementById(\"myLinks\");\n  var border = document.getElementById(\"siteHeader\");\n  if (x.style.display === \"block\") {\n    x.style.display = \"none\";\n  } else {\n    x.style.display = \"block\";\n  }\n}\n\nexport default ({ children }) => (\n  <div id=\"header\"\n      style= {{ margin: `2rem auto`, maxWidth: 850, padding: `0 1rem` }}>\n\n    <Header />\n\n      {children}\n\n    <Footer />\n\n\n  </div>\n)\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport InternalPageRenderer from \"./page-renderer\"\n\nconst ProdPageRenderer = ({ location, pageResources }) => {\n  if (!pageResources) {\n    return null\n  }\n  return React.createElement(InternalPageRenderer, {\n    location,\n    pageResources,\n    ...pageResources.json,\n  })\n}\n\nProdPageRenderer.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n}\n\nexport default ProdPageRenderer\n"],"sourceRoot":""}